apply plugin: 'com.android.application'

android {
    compileSdkVersion project.COMPILE_SDK_VERSION
    signingConfigs {
        demo {
            keyAlias 'com.light.cleaner.zero.jks'
            keyPassword 'candymobi2019'
            storeFile file('com.light.cleaner.zero.jks')
            storePassword 'candymobi2019'
        }
    }
    defaultConfig {
        applicationId project.HOST_APP_APPLICATION_ID
        minSdkVersion project.MIN_SDK_VERSION
        targetSdkVersion project.TARGET_SDK_VERSION
        versionCode project.VERSION_CODE
        versionName project.KS_PLUGIN
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

//            signingConfig signingConfigs.create("release")
//            signingConfig.initWith(buildTypes.debug.signingConfig)
            signingConfig signingConfigs.demo
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

//            signingConfig signingConfigs.create("release")
//            signingConfig.initWith(buildTypes.debug.signingConfig)
            signingConfig signingConfigs.demo
        }
    }
}

dependencies {
    implementation project(':adapter_plugin:plugin-main-lib')
    //Shadow Transform后业务代码会有一部分实际引用runtime中的类
    //如果不以compileOnly方式依赖，会导致其他Transform或者Proguard找不到这些类
    compileOnly "com.tencent.shadow.core:runtime:$shadow_version"
    implementation(name: rootProject.ext.dependencies.ks, ext: 'aar')
    compileOnly project(':nm-android-sdk')
}

repositories {
    flatDir {
        dirs '../../libs'
    }
}

//这段buildscript配置的dependencies是为了apply plugin: 'com.tencent.shadow.plugin'能找到实现
buildscript {
    repositories {
        google()
        jcenter()
        mavenLocal()
    }

    dependencies {
        classpath "com.tencent.shadow.core:gradle-plugin:$shadow_version"
    }
}

apply plugin: 'com.tencent.shadow.plugin'

shadow {
    packagePlugin {
        pluginTypes {
            debug {
//                loaderApkConfig = new Tuple2('sample-loader-debug.apk', ':adapter_plugin:sample-loader:assembleDebug')
//                runtimeApkConfig = new Tuple2('sample-runtime-debug.apk', ':adapter_plugin:sample-runtime:assembleDebug')
                pluginApks {
                    pluginApk1 {
                        businessName = 'Plugin5'
//businessName相同的插件，context获取的Dir是相同的。businessName留空，表示和宿主相同业务，直接使用宿主的Dir。
                        partKey = 'Plugin5'
                        buildTask = 'assembleDebug'
                        apkName = 'plugin-ks-plugin5-apk-debug.apk'
                        apkPath = 'adapter_plugin/plugin-ks-plugin5-apk/build/outputs/apk/debug/plugin-ks-plugin5-apk-debug.apk'
                        hostWhiteList = ["com.cloudtech.shell.shadow.share", "com.nbmediation.sdk.mediation", "com.nbmediation.sdk.utils", "com.nbmediation.sdk.video"]
                    }
                }
            }

            release {
//                loaderApkConfig = new Tuple2('plugin-loader-release.apk', ':adapter_plugin:plugin-loader:assembleRelease')
//                runtimeApkConfig = new Tuple2('plugin-runtime-release.apk', ':adapter_plugin:plugin-runtime:assembleRelease')
                pluginApks {
                    pluginApk1 {
                        businessName = 'Plugin5'
                        partKey = 'Plugin5'
                        buildTask = 'assembleRelease'
                        apkName = 'plugin-ks-plugin5-apk-release.apk'
                        apkPath = 'adapter_plugin/plugin-ks-plugin5-apk/build/outputs/apk/release/plugin-ks-plugin5-apk-release.apk'
                        hostWhiteList = ["com.cloudtech.shell.shadow.share", "com.nbmediation.sdk.mediation", "com.nbmediation.sdk.utils", "com.nbmediation.sdk.video"]
                    }
                }
            }
        }

        archivePrefix = "ks-plugin5-${android.defaultConfig.applicationId}"
        archiveSuffix = project.KS_PLUGIN
//        loaderApkProjectPath = 'adapter_plugin/plugin-loader'
//
//        runtimeApkProjectPath = 'adapter_plugin/plugin-runtime'

        version = 2
        compactVersion = [1, 2, 4]
        uuidNickName = project.KS_PLUGIN
        uuid = '57457678-2A73-4C48-8837-C584C9963619'
    }
}