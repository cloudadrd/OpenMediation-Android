apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.version.compileSdkVersion


    defaultConfig {
        minSdkVersion rootProject.ext.version.minSdkVersion
        targetSdkVersion rootProject.ext.version.targetSdkVersion
        versionCode rootProject.ext.version.versionCode
        versionName project.nm_version
    }

    android {
        lintOptions {
            abortOnError false
        }
        testOptions {
            unitTests.returnDefaultValues = true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'dexguard-project.txt'
            consumerProguardFiles 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'dexguard-project.txt'
            consumerProguardFiles 'proguard-rules.pro'
        }
    }

    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }
}

def fileName = project.name + '-' + project.nm_version + '.aar'
def normalPath = "build/outputs/aar/"
android.libraryVariants.all { variant ->
    variant.outputs.all {
        if (variant.buildType.name == 'release') {
            outputFileName = fileName
        }
    }
}

task copyAAR(type: Copy) {
    from normalPath + fileName
    into "../release/"
}

build.dependsOn(copyAAR)

dependencies {
    testImplementation 'junit:junit:4.12'
    compileOnly(name: "msa_mdid_1.0.13", ext: 'aar')
}

repositories {
    flatDir {
        dirs '../libs'
    }
}
